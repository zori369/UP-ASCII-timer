/**
*
* Solution to course project #10
* Introduction to programming course
* Faculty of Mathematics and Informatics of Sofia University
* Winter semester 2020/2021
* 
* @author Zornitsa Dimova
* @idnumber 62266
* @compiler VC
* 
* file with whole project
* 
*/

#include <iostream>
#include <iomanip>
using namespace std;

const int N = 11;
const int M = 10;
const int D = 4;

char arrayForOne[N][M] = {
	{32,32,32,32,32,32,32,32,32,49},
	{32,32,32,32,32,32,32,32,32,49},
	{32,32,32,32,32,32,32,32,32,49},
	{32,32,32,32,32,32,32,32,32,49},
	{32,32,32,32,32,32,32,32,32,49},
	{32,32,32,32,32,32,32,32,32,49},
	{32,32,32,32,32,32,32,32,32,49},
	{32,32,32,32,32,32,32,32,32,49},
	{32,32,32,32,32,32,32,32,32,49},
	{32,32,32,32,32,32,32,32,32,49},
	{32,32,32,32,32,32,32,32,32,49}
};
char arrayForTwo[N][M] = {
	{50,50,50,50,50,50,50,50,50,50},
	{32,32,32,32,32,32,32,32,32,50},
	{32,32,32,32,32,32,32,32,32,50},
	{32,32,32,32,32,32,32,32,32,50},
	{32,32,32,32,32,32,32,32,32,50},
	{50,50,50,50,50,50,50,50,50,50},
	{50,32,32,32,32,32,32,32,32,32},
	{50,32,32,32,32,32,32,32,32,32},
	{50,32,32,32,32,32,32,32,32,32},
	{50,32,32,32,32,32,32,32,32,32},
	{50,50,50,50,50,50,50,50,50,50}
};
char arrayForThree[N][M] = {
	{51,51,51,51,51,51,51,51,51,51},
	{32,32,32,32,32,32,32,32,32,51},
	{32,32,32,32,32,32,32,32,32,51},
	{32,32,32,32,32,32,32,32,32,51},
	{32,32,32,32,32,32,32,32,32,51},
	{51,51,51,51,51,51,51,51,51,51},
	{32,32,32,32,32,32,32,32,32,51},
	{32,32,32,32,32,32,32,32,32,51},
	{32,32,32,32,32,32,32,32,32,51},
	{32,32,32,32,32,32,32,32,32,51},
	{51,51,51,51,51,51,51,51,51,51}
};
char arrayForFour[N][M] = {
	{52,32,32,32,32,32,32,32,32,52},
	{52,32,32,32,32,32,32,32,32,52},
	{52,32,32,32,32,32,32,32,32,52},
	{52,32,32,32,32,32,32,32,32,52},
	{52,32,32,32,32,32,32,32,32,52},
	{52,52,52,52,52,52,52,52,52,52},
	{32,32,32,32,32,32,32,32,32,52},
	{32,32,32,32,32,32,32,32,32,52},
	{32,32,32,32,32,32,32,32,32,52},
	{32,32,32,32,32,32,32,32,32,52},
	{32,32,32,32,32,32,32,32,32,52}
};
char arrayForFive[N][M] = {
	{53,53,53,53,53,53,53,53,53,53},
	{53,32,32,32,32,32,32,32,32,32},
	{53,32,32,32,32,32,32,32,32,32},
	{53,32,32,32,32,32,32,32,32,32},
	{53,32,32,32,32,32,32,32,32,32},
	{53,53,53,53,53,53,53,53,53,53},
	{32,32,32,32,32,32,32,32,32,53},
	{32,32,32,32,32,32,32,32,32,53},
	{32,32,32,32,32,32,32,32,32,53},
	{32,32,32,32,32,32,32,32,32,53},
	{53,53,53,53,53,53,53,53,53,53}
};
char arrayForSix[N][M] = {
	{54,54,54,54,54,54,54,54,54,54},
	{54,32,32,32,32,32,32,32,32,32},
	{54,32,32,32,32,32,32,32,32,32},
	{54,32,32,32,32,32,32,32,32,32},
	{54,32,32,32,32,32,32,32,32,32},
	{54,54,54,54,54,54,54,54,54,54},
	{54,32,32,32,32,32,32,32,32,54},
	{54,32,32,32,32,32,32,32,32,54},
	{54,32,32,32,32,32,32,32,32,54},
	{54,32,32,32,32,32,32,32,32,54},
	{54,54,54,54,54,54,54,54,54,54}
};
char arrayForSeven[N][M] = {
	{55,55,55,55,55,55,55,55,55,55},
	{32,32,32,32,32,32,32,32,32,55},
	{32,32,32,32,32,32,32,32,55,32},
	{32,32,32,32,32,32,32,55,32,32},
	{32,32,32,32,32,32,55,32,32,32},
	{55,55,55,55,55,55,55,55,55,55},
	{32,32,32,32,55,32,32,32,32,32},
	{32,32,32,55,32,32,32,32,32,32},
	{32,32,55,32,32,32,32,32,32,32},
	{32,55,32,32,32,32,32,32,32,32},
	{55,32,32,32,32,32,32,32,32,32}
};
char arrayForEight[N][M] = {
	{56,56,56,56,56,56,56,56,56,56},
	{56,32,32,32,32,32,32,32,32,56},
	{56,32,32,32,32,32,32,32,32,56},
	{56,32,32,32,32,32,32,32,32,56},
	{56,32,32,32,32,32,32,32,32,56},
	{56,56,56,56,56,56,56,56,56,56},
	{56,32,32,32,32,32,32,32,32,56},
	{56,32,32,32,32,32,32,32,32,56},
	{56,32,32,32,32,32,32,32,32,56},
	{56,32,32,32,32,32,32,32,32,56},
	{56,56,56,56,56,56,56,56,56,56}
};
char arrayForNine[N][M] = {
	{57,57,57,57,57,57,57,57,57,57},
	{57,32,32,32,32,32,32,32,32,57},
	{57,32,32,32,32,32,32,32,32,57},
	{57,32,32,32,32,32,32,32,32,57},
	{57,32,32,32,32,32,32,32,32,57},
	{57,57,57,57,57,57,57,57,57,57},
	{32,32,32,32,32,32,32,32,32,57},
	{32,32,32,32,32,32,32,32,32,57},
	{32,32,32,32,32,32,32,32,32,57},
	{32,32,32,32,32,32,32,32,32,57},
	{57,57,57,57,57,57,57,57,57,57}
};
char arrayForZero[N][M] = {
	{48,48,48,48,48,48,48,48,48,48},
	{48,32,32,32,32,32,32,32,32,48},
	{48,32,32,32,32,32,32,32,32,48},
	{48,32,32,32,32,32,32,32,32,48},
	{48,32,32,32,32,32,32,32,32,48},
	{48,32,32,32,32,32,32,32,32,48},
	{48,32,32,32,32,32,32,32,32,48},
	{48,32,32,32,32,32,32,32,32,48},
	{48,32,32,32,32,32,32,32,32,48},
	{48,32,32,32,32,32,32,32,32,48},
	{48,48,48,48,48,48,48,48,48,48}
};

void printRow(char digit[][M], int row) {
	for (int j = 0; j < M; j++) {
		std::cout << digit[row][j];
	}
	std::cout << " ";
}

void print(int* digits, int counter) {
	int count = 0;
	for (int i = 0; i < N; i++) {
		std::cout << std::setw(85);

		if (counter == 3) {
			for (int c = 0; c < M; c++) {
				std::cout << arrayForZero[count][c];
			}
			std::cout << "  ";
		}
		if (counter == 2) {
			for (int c = 0; c < M; c++) {
				std::cout << arrayForZero[count][c];
			}
			std::cout << "  ";

			for (int c = 0; c < M; c++) {
				std::cout << arrayForZero[count][c];
			}
			std::cout << "  ";
		}
		if (counter == 1) {
			for (int c = 0; c < M; c++) {
				std::cout << arrayForZero[count][c];
			}
			std::cout << "  ";

			for (int c = 0; c < M; c++) {
				std::cout << arrayForZero[count][c];
			}
			std::cout << "  ";

			for (int c = 0; c < M; c++) {
				std::cout << arrayForZero[count][c];
			}
			std::cout << "  ";
		}

		for (int j = 0; j < D; j++) {
			switch (digits[j]) {
			case 0: printRow(arrayForZero, i);
				break;
			case 1: printRow(arrayForOne, i);
				break;
			case 2: printRow(arrayForTwo, i);
				break;
			case 3: printRow(arrayForThree, i);
				break;
			case 4: printRow(arrayForFour, i);
				break;
			case 5: printRow(arrayForFive, i);
				break;
			case 6: printRow(arrayForSix, i);
				break;
			case 7: printRow(arrayForSeven, i);
				break;
			case 8: printRow(arrayForEight, i);
				break;
			case 9: printRow(arrayForNine, i);
				break;
			}
		}
		std::cout << std::endl;
		count++;
	}
}

int main() {
	int number;
	int count = 0;
	std::cout << "Please enter a four-digit number." << std::endl;
	std::cin >> number;

	if (std::cin.fail()) {
		std::cin.clear();
		std::cin.ignore();
		std::cout << "You have to input a number!!!";
		return 1;
	}
	for (int i = number; i > 0; i /= 10) {
		count++;
	}
	if (count != D) {
		std::cout << "You have to input a four-digit number!" << std::endl;
		return 0;
	}

	for (int k = number; k >= 0; k--) {
		int counter = 0;
		int* digits = new int[D];
		int j = 3;
		for (int i = k; i > 0; i /= 10) {
			digits[j] = i % 10;
			counter++;
			j--;
		}

		for (int i = 0; i < 20; i++) {
			std::cout << std::endl;
		}
		print(digits, counter);

		system("cls");
		delete[] digits;
	}

	system("cls");
	std::cout << '\a';

	return 0;
}